FROM php:8.2-apache

# Install dependencies
RUN apt-get update && apt-get install -y \
    git curl unzip zip \
    libpng-dev libonig-dev libxml2-dev libzip-dev \
    libicu-dev libgmp-dev libfreetype6-dev libjpeg62-turbo-dev \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip intl gmp && \
    pecl install redis && docker-php-ext-enable redis

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install Node.js and Yarn
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g yarn@1.22

WORKDIR /var/www/html

# Copy files
COPY . .

# Install dependencies
RUN composer remove roave/security-advisories --dev --no-interaction --no-update 2>/dev/null || true
RUN composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs

# Build assets
RUN cp .env.example .env && \
    php artisan key:generate --no-interaction && \
    mkdir -p public/js/langs && \
    (cp resources/lang/en.json public/js/langs/en.json 2>/dev/null || echo '{}' > public/js/langs/en.json) && \
    yarn install --frozen-lockfile && \
    yarn run production

# Configure for Railway
RUN echo 'Listen ${PORT:-80}' > /etc/apache2/ports.conf && \
    echo 'ServerName localhost' > /etc/apache2/conf-available/servername.conf && \
    a2enconf servername && \
    a2enmod rewrite

# Create simple vhost for Railway PORT
RUN echo '<VirtualHost *:${PORT:-80}>\n\
    DocumentRoot /var/www/html/public\n\
    <Directory /var/www/html/public>\n\
        AllowOverride All\n\
        Require all granted\n\
    </Directory>\n\
</VirtualHost>' > /etc/apache2/sites-available/000-default.conf

# Set permissions
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 755 storage bootstrap/cache

# Simple startup
RUN echo '#!/bin/bash\n\
mkdir -p storage/logs storage/app/public storage/framework/{views,cache,sessions}\n\
chown -R www-data:www-data storage bootstrap/cache\n\
[ -z "$APP_KEY" ] && php artisan key:generate --no-interaction\n\
php artisan storage:link 2>/dev/null || true\n\
exec apache2-foreground' > /start.sh && chmod +x /start.sh

EXPOSE ${PORT:-80}
CMD ["/start.sh"]